"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const cors_1 = __importDefault(require("cors"));
const dotenv_1 = __importDefault(require("dotenv"));
const routes_1 = __importDefault(require("./routes"));
const database_1 = __importDefault(require("./config/database"));
require("./models"); // —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –º–æ–¥–µ–ª–µ–π
// import seedDatabase from './seedData';
dotenv_1.default.config();
const app = (0, express_1.default)();
const PORT = process.env.PORT || 5000;
const isDev = process.env.NODE_ENV !== 'production';
// Middleware
app.use((0, cors_1.default)({
    origin: '*', // –î–æ–∑–≤–æ–ª—è—î–º–æ –∑–∞–ø–∏—Ç–∏ –∑ —É—Å—ñ—Ö –¥–æ–º–µ–Ω—ñ–≤
    methods: ['GET', 'POST', 'PUT', 'DELETE', 'PATCH', 'OPTIONS'],
    allowedHeaders: ['Content-Type', 'Authorization'],
    credentials: true
}));
app.use(express_1.default.json());
app.use(express_1.default.urlencoded({ extended: true }));
// –ú–∞—Ä—à—Ä—É—Ç–∏ API
// –í–∏–¥–∞–ª—è—î–º–æ —Ç–µ—Å—Ç–æ–≤–∏–π –º–∞—Ä—à—Ä—É—Ç —ñ –¥–æ–¥–∞—î–º–æ –º–∞—Ä—à—Ä—É—Ç–∏ –±–µ–∑ –ø—Ä–µ—Ñ—ñ–∫—Å—É
// –î–æ–¥–∞—î–º–æ –º–∞—Ä—à—Ä—É—Ç –¥–ª—è –∫–æ—Ä–µ–Ω–µ–≤–æ–≥–æ —à–ª—è—Ö—É, —è–∫–∏–π –ø–æ–≤–µ—Ä—Ç–∞—î —Å—Ç–∞—Ç—É—Å API
app.get('/', (_req, res) => {
    res.json({ status: 'ok', message: 'CRM Repair API –ø—Ä–∞—Ü—é—î!' });
});
// –î–æ–¥–∞—î–º–æ –º–∞—Ä—à—Ä—É—Ç–∏ API
app.use('/api', routes_1.default);
app.use('/', routes_1.default);
// –ì–ª–æ–±–∞–ª—å–Ω–∏–π error handler
app.use((err, _req, res, _next) => {
    console.error('–°–µ—Ä–≤–µ—Ä–Ω–∞ –ø–æ–º–∏–ª–∫–∞:', err);
    res.status(500).send('–©–æ—Å—å –ø—ñ—à–ª–æ –Ω–µ —Ç–∞–∫');
});
// –°—Ç–∞—Ä—Ç —Å–µ—Ä–≤–µ—Ä–∞
const startServer = async () => {
    try {
        await database_1.default.authenticate();
        console.log('‚úÖ –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
        await database_1.default.sync({ force: isDev, alter: !isDev });
        console.log('üóÉ –°—Ö–µ–º–∞ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–æ–≤–∞–Ω–∞');
        app.listen(PORT, () => {
            console.log(`üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω–æ –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
        });
    }
    catch (error) {
        console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–ø—É—Å–∫—É —Å–µ—Ä–≤–µ—Ä–∞:', error);
    }
};
startServer();
