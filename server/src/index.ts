import express, { Request, Response, NextFunction } from 'express';
import cors from 'cors';
import dotenv from 'dotenv';
import routes from './routes';
import sequelize from './config/database';
import './models'; // —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –º–æ–¥–µ–ª–µ–π
// import seedDatabase from './seedData';

dotenv.config();

const app = express();
const PORT = process.env.PORT || 5000;
const isDev = process.env.NODE_ENV !== 'production';

// Middleware
app.use(cors({
  origin: '*', // –î–æ–∑–≤–æ–ª—è—î–º–æ –∑–∞–ø–∏—Ç–∏ –∑ —É—Å—ñ—Ö –¥–æ–º–µ–Ω—ñ–≤
  methods: ['GET', 'POST', 'PUT', 'DELETE', 'PATCH', 'OPTIONS'],
  allowedHeaders: ['Content-Type', 'Authorization'],
  credentials: true
}));
app.use(express.json());
app.use(express.urlencoded({ extended: true }));

// –ú–∞—Ä—à—Ä—É—Ç–∏ API
// –í–∏–¥–∞–ª—è—î–º–æ —Ç–µ—Å—Ç–æ–≤–∏–π –º–∞—Ä—à—Ä—É—Ç —ñ –¥–æ–¥–∞—î–º–æ –º–∞—Ä—à—Ä—É—Ç–∏ –±–µ–∑ –ø—Ä–µ—Ñ—ñ–∫—Å—É

// –î–æ–¥–∞—î–º–æ –º–∞—Ä—à—Ä—É—Ç –¥–ª—è –∫–æ—Ä–µ–Ω–µ–≤–æ–≥–æ —à–ª—è—Ö—É, —è–∫–∏–π –ø–æ–≤–µ—Ä—Ç–∞—î —Å—Ç–∞—Ç—É—Å API
app.get('/', (_req: Request, res: Response) => {
  res.json({ status: 'ok', message: 'CRM Repair API –ø—Ä–∞—Ü—é—î!' });
});

// –î–æ–¥–∞—î–º–æ –º–∞—Ä—à—Ä—É—Ç–∏ API
app.use('/api', routes);
app.use('/', routes);

// –ì–ª–æ–±–∞–ª—å–Ω–∏–π error handler
app.use((err: Error, _req: Request, res: Response, _next: NextFunction) => {
  console.error('–°–µ—Ä–≤–µ—Ä–Ω–∞ –ø–æ–º–∏–ª–∫–∞:', err);
  res.status(500).send('–©–æ—Å—å –ø—ñ—à–ª–æ –Ω–µ —Ç–∞–∫');
});

// –°—Ç–∞—Ä—Ç —Å–µ—Ä–≤–µ—Ä–∞
const startServer = async (): Promise<void> => {
  try {
    await sequelize.authenticate();
    console.log('‚úÖ –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');

    await sequelize.sync({ force: isDev, alter: !isDev });
console.log('üóÉ –°—Ö–µ–º–∞ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–æ–≤–∞–Ω–∞'); 

    app.listen(PORT, () => {
      console.log(`üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω–æ –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
    });
  } catch (error) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–ø—É—Å–∫—É —Å–µ—Ä–≤–µ—Ä–∞:', error);
  }
};

startServer();

